void __thiscall CTFPlayerShared::ConditionThink(CTFPlayerShared *this)
{
  CNetworkVarBase<float,CTFPlayerShared::NetworkVar_m_flCloakMeter> *p_m_flCloakMeter; // esi
  float val; // [esp+Ch] [ebp-4h] BYREF

  if ( CTFPlayer::IsPlayerClass(this->m_pOuter, 8) )
  {
    p_m_flCloakMeter = &this->m_flCloakMeter;
    if ( (this->m_nPlayerCond.m_Value & 0x100) != 0 )
    {
      val = p_m_flCloakMeter->m_Value - tf_spy_cloak_consume_rate.m_pParent->m_fValue * gpGlobals->frametime;
      CNetworkVarBase<float,CTFPlayerShared::NetworkVar_m_flCloakMeter>::Set(&this->m_flCloakMeter, &val);
      if ( p_m_flCloakMeter->m_Value <= 0.0 )
        CTFPlayerShared::FadeInvis(this, tf_spy_invis_unstealth_time.m_pParent->m_fValue);
    }
    else
    {
      val = tf_spy_cloak_regen_rate.m_pParent->m_fValue * gpGlobals->frametime + p_m_flCloakMeter->m_Value;
      CNetworkVarBase<float,CTFPlayerShared::NetworkVar_m_flCloakMeter>::Set(&this->m_flCloakMeter, &val);
      if ( p_m_flCloakMeter->m_Value >= 100.0 )
      {
        val = 100.0;
        CNetworkVarBase<float,CTFPlayerShared::NetworkVar_m_flCloakMeter>::Set(&this->m_flCloakMeter, &val);
      }
    }
  }
}