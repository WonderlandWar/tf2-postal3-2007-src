void __thiscall CTFWeaponBaseGrenadeProj::SendDispatchEffect(CTFWeaponBaseGrenadeProj *this)
{
  IPredictionSystem *i; // eax
  int m_iEFlags; // eax
  int v4; // ecx
  int (__thiscall *GetWeaponID)(CTFWeaponBaseGrenadeProj *); // eax
  IPredictionSystem *j; // eax
  CEffectData explosionData; // [esp+4h] [ebp-64h] BYREF

  for ( i = IPredictionSystem::g_pPredictionSystems; i; i = i->m_pNextSystem )
    ++i->m_nStatusPushed;
  m_iEFlags = this->m_iEFlags;
  explosionData.m_vOrigin.y = 0.0;
  explosionData.m_vOrigin.z = 0.0;
  explosionData.m_vStart.x = 0.0;
  explosionData.m_nEntIndex = 0;
  explosionData.m_vStart.y = 0.0;
  explosionData.m_flScale = 0.0;
  explosionData.m_vStart.z = 0.0;
  *(_DWORD *)&explosionData.m_nSurfaceProp = 0;
  explosionData.m_vNormal.x = 0.0;
  LOWORD(explosionData.m_nMaterial) = 0;
  explosionData.m_vNormal.y = 0.0;
  memset(&explosionData.m_nDamageType, 0, 13);
  explosionData.m_vNormal.z = 0.0;
  explosionData.m_vAngles.x = 0.0;
  explosionData.m_vAngles.y = 0.0;
  explosionData.m_vAngles.z = 0.0;
  *(float *)&explosionData.m_fFlags = 0.0;
  explosionData.m_flMagnitude = 1.0;
  explosionData.m_flRadius = 0.0;
  *(float *)&explosionData.m_nAttachmentIndex = 0.0;
  if ( (m_iEFlags & 0x800) != 0 )
    CBaseEntity::CalcAbsolutePosition(this);
  v4 = this->m_iEFlags;
  explosionData.m_vOrigin.y = this->m_vecAbsOrigin.x;
  explosionData.m_vOrigin.z = this->m_vecAbsOrigin.y;
  explosionData.m_vStart.x = this->m_vecAbsOrigin.z;
  if ( (v4 & 0x800) != 0 )
    CBaseEntity::CalcAbsolutePosition(this);
  GetWeaponID = this->GetWeaponID;
  explosionData.m_vAngles.y = this->m_angAbsRotation.x;
  explosionData.m_vAngles.z = this->m_angAbsRotation.y;
  *(float *)&explosionData.m_fFlags = this->m_angAbsRotation.z;
  explosionData.m_nEntIndex = GetWeaponID(this);
  DispatchEffect("TF_Explosion", (CEffectData *)&explosionData.m_vOrigin.y);
  for ( j = IPredictionSystem::g_pPredictionSystems; j; j = j->m_pNextSystem )
    --j->m_nStatusPushed;
}