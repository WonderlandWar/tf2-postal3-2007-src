int __thiscall CTFPlayer::BuildObservableEntityList(CTFPlayer *this)
{
  CUtlMemory<vgui::TreeNode *,int> *p_m_hObservableEntities; // esi
  bool v2; // sf
  CBaseEntity *j; // ebx
  unsigned int m_Index; // ebp
  vgui::TreeNode **m_pMemory; // edi
  int m_nAllocationCount; // eax
  vgui::TreeNode **v7; // ecx
  int v8; // eax
  bool v9; // zf
  vgui::TreeNode **v10; // eax
  unsigned int v11; // eax
  CTFWeaponBase *m_pEntity; // ecx
  int v13; // eax
  CBasePlayer *v14; // ebx
  const CBaseHandle *v15; // eax
  vgui::TreeNode **v16; // edi
  vgui::TreeNode *v17; // ebp
  int v18; // eax
  vgui::TreeNode **v19; // ecx
  int v20; // eax
  vgui::TreeNode **v21; // eax
  unsigned int v22; // eax
  CTFWeaponBase *v23; // ecx
  int v24; // eax
  CBaseEntityList *v25; // edx
  unsigned int v26; // eax
  CEntInfo *v27; // ecx
  CTFWeaponBase *v28; // ebx
  vgui::TreeNode **v29; // eax
  vgui::TreeNode **v30; // edi
  vgui::TreeNode *v31; // ebp
  int v32; // eax
  vgui::TreeNode **v33; // ecx
  int v34; // eax
  vgui::TreeNode **v35; // eax
  unsigned int v36; // eax
  CTFWeaponBase *v37; // ecx
  int i; // [esp+14h] [ebp-Ch]
  int iNumObjects; // [esp+18h] [ebp-8h]
  int iNumObjectsa; // [esp+18h] [ebp-8h]
  int m_Size; // [esp+1Ch] [ebp-4h]

  p_m_hObservableEntities = (CUtlMemory<vgui::TreeNode *,int> *)&this->m_hObservableEntities;
  v2 = this->m_hObservableEntities.m_Memory.m_nGrowSize < 0;
  this->m_hObservableEntities.m_Size = 0;
  if ( !v2 )
  {
    if ( p_m_hObservableEntities->m_pMemory )
    {
      _g_pMemAlloc->Free(_g_pMemAlloc, p_m_hObservableEntities->m_pMemory);
      p_m_hObservableEntities->m_pMemory = 0;
    }
    p_m_hObservableEntities->m_nAllocationCount = 0;
  }
  p_m_hObservableEntities[1].m_nAllocationCount = (int)p_m_hObservableEntities->m_pMemory;
  i = -1;
  for ( j = CGlobalEntityList::FindEntityByClassname(&gEntList, 0, "info_observer_point");
        j;
        j = CGlobalEntityList::FindEntityByClassname(&gEntList, j, "info_observer_point") )
  {
    m_Index = j->GetRefEHandle(j)->m_Index;
    m_pMemory = p_m_hObservableEntities[1].m_pMemory;
    m_nAllocationCount = p_m_hObservableEntities->m_nAllocationCount;
    if ( (int)m_pMemory + 1 > m_nAllocationCount )
      CUtlMemory<CTeamControlPointRound *,int>::Grow(p_m_hObservableEntities, (int)m_pMemory - m_nAllocationCount + 1);
    ++p_m_hObservableEntities[1].m_pMemory;
    v7 = p_m_hObservableEntities->m_pMemory;
    v8 = (char *)p_m_hObservableEntities[1].m_pMemory - (char *)m_pMemory - 1;
    v9 = (char *)p_m_hObservableEntities[1].m_pMemory - (char *)m_pMemory == 1;
    p_m_hObservableEntities[1].m_nAllocationCount = (int)p_m_hObservableEntities->m_pMemory;
    if ( v8 >= 0 && !v9 )
      memmove((unsigned __int8 *)&v7[(_DWORD)m_pMemory + 1], (unsigned __int8 *)&v7[(_DWORD)m_pMemory], 4 * v8);
    v10 = &p_m_hObservableEntities->m_pMemory[(_DWORD)m_pMemory];
    if ( v10 )
      *v10 = (vgui::TreeNode *)m_Index;
    v11 = this->m_hObserverTarget.m_Value.m_Index;
    if ( v11 == -1
      || g_pEntityList->m_EntPtrArray[this->m_hObserverTarget.m_Value.m_Index & 0xFFF].m_SerialNumber != v11 >> 12 )
    {
      m_pEntity = 0;
    }
    else
    {
      m_pEntity = g_pEntityList->m_EntPtrArray[this->m_hObserverTarget.m_Value.m_Index & 0xFFF].m_pEntity;
    }
    if ( m_pEntity == j )
      i = this->m_hObservableEntities.m_Size - 1;
  }
  v13 = 1;
  for ( iNumObjects = 1; iNumObjects <= gpGlobals->maxClients; ++iNumObjects )
  {
    v14 = UTIL_PlayerByIndex(v13);
    if ( v14 )
    {
      v15 = v14->GetRefEHandle(v14);
      v16 = p_m_hObservableEntities[1].m_pMemory;
      v17 = (vgui::TreeNode *)v15->m_Index;
      v18 = p_m_hObservableEntities->m_nAllocationCount;
      if ( (int)v16 + 1 > v18 )
        CUtlMemory<CTeamControlPointRound *,int>::Grow(p_m_hObservableEntities, (int)v16 - v18 + 1);
      ++p_m_hObservableEntities[1].m_pMemory;
      v19 = p_m_hObservableEntities->m_pMemory;
      v20 = (char *)p_m_hObservableEntities[1].m_pMemory - (char *)v16 - 1;
      v9 = (char *)p_m_hObservableEntities[1].m_pMemory - (char *)v16 == 1;
      p_m_hObservableEntities[1].m_nAllocationCount = (int)p_m_hObservableEntities->m_pMemory;
      if ( v20 >= 0 && !v9 )
        memmove((unsigned __int8 *)&v19[(_DWORD)v16 + 1], (unsigned __int8 *)&v19[(_DWORD)v16], 4 * v20);
      v21 = &p_m_hObservableEntities->m_pMemory[(_DWORD)v16];
      if ( v21 )
        *v21 = v17;
      v22 = this->m_hObserverTarget.m_Value.m_Index;
      if ( v22 == -1
        || g_pEntityList->m_EntPtrArray[this->m_hObserverTarget.m_Value.m_Index & 0xFFF].m_SerialNumber != v22 >> 12 )
      {
        v23 = 0;
      }
      else
      {
        v23 = g_pEntityList->m_EntPtrArray[this->m_hObserverTarget.m_Value.m_Index & 0xFFF].m_pEntity;
      }
      if ( v23 == (CTFWeaponBase *)v14 )
        i = this->m_hObservableEntities.m_Size - 1;
    }
    v13 = iNumObjects + 1;
  }
  v24 = 0;
  m_Size = this->m_aObjects.m_Size;
  iNumObjectsa = 0;
  if ( m_Size > 0 )
  {
    v25 = g_pEntityList;
    do
    {
      v26 = this->m_aObjects.m_Memory.m_pMemory[v24].m_Index;
      if ( v26 != -1 )
      {
        v27 = &v25->m_EntPtrArray[v26 & 0xFFF];
        if ( v25->m_EntPtrArray[v26 & 0xFFF].m_SerialNumber == v26 >> 12 )
        {
          v28 = v27->m_pEntity;
          if ( v27->m_pEntity )
          {
            v29 = (vgui::TreeNode **)v28->GetRefEHandle(v27->m_pEntity);
            v30 = p_m_hObservableEntities[1].m_pMemory;
            v31 = *v29;
            v32 = p_m_hObservableEntities->m_nAllocationCount;
            if ( (int)v30 + 1 > v32 )
              CUtlMemory<CTeamControlPointRound *,int>::Grow(p_m_hObservableEntities, (int)v30 - v32 + 1);
            ++p_m_hObservableEntities[1].m_pMemory;
            v33 = p_m_hObservableEntities->m_pMemory;
            v34 = (char *)p_m_hObservableEntities[1].m_pMemory - (char *)v30 - 1;
            v9 = (char *)p_m_hObservableEntities[1].m_pMemory - (char *)v30 == 1;
            p_m_hObservableEntities[1].m_nAllocationCount = (int)p_m_hObservableEntities->m_pMemory;
            if ( v34 >= 0 && !v9 )
              memmove((unsigned __int8 *)&v33[(_DWORD)v30 + 1], (unsigned __int8 *)&v33[(_DWORD)v30], 4 * v34);
            v35 = &p_m_hObservableEntities->m_pMemory[(_DWORD)v30];
            if ( v35 )
              *v35 = v31;
            v36 = this->m_hObserverTarget.m_Value.m_Index;
            v25 = g_pEntityList;
            if ( v36 == -1
              || g_pEntityList->m_EntPtrArray[this->m_hObserverTarget.m_Value.m_Index & 0xFFF].m_SerialNumber != v36 >> 12 )
            {
              v37 = 0;
            }
            else
            {
              v37 = g_pEntityList->m_EntPtrArray[this->m_hObserverTarget.m_Value.m_Index & 0xFFF].m_pEntity;
            }
            if ( v37 == v28 )
              i = this->m_hObservableEntities.m_Size - 1;
          }
        }
      }
      v24 = ++iNumObjectsa;
    }
    while ( iNumObjectsa < m_Size );
  }
  return i;
}