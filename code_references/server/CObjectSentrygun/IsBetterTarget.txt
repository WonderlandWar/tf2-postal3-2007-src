bool __userpurge CObjectSentrygun::IsBetterTarget@<al>(
        CObjectSentrygun *this@<ecx>,
        int a2@<edi>,
        CBaseEntity *pNewTarget,
        int a4)
{
  unsigned int m_Index; // eax
  CEntInfo *v6; // ecx
  unsigned int v8; // eax
  IHandleEntity *m_pEntity; // ecx
  float *v10; // edi
  Vector *v11; // eax
  float *v12; // edi
  Vector *v13; // eax
  float _X; // [esp+8h] [ebp-30h]
  float _Xa; // [esp+8h] [ebp-30h]
  float vecCurrentTargetDist_4; // [esp+14h] [ebp-24h]
  float vecCurrentTargetDist_8; // [esp+18h] [ebp-20h]
  Vector vecNewTargetDist; // [esp+1Ch] [ebp-1Ch] BYREF
  float v19[2]; // [esp+28h] [ebp-10h]
  char v20[8]; // [esp+30h] [ebp-8h] BYREF
  float pNewTargeta; // [esp+3Ch] [ebp+4h]

  m_Index = this->m_hEnemy.m_Index;
  if ( m_Index == -1 )
    return 1;
  v6 = &g_pEntityList->m_EntPtrArray[this->m_hEnemy.m_Index & 0xFFF];
  if ( v6->m_SerialNumber != m_Index >> 12 || !v6->m_pEntity )
    return 1;
  v8 = this->m_hEnemy.m_Index;
  if ( v8 == -1 || g_pEntityList->m_EntPtrArray[this->m_hEnemy.m_Index & 0xFFF].m_SerialNumber != v8 >> 12 )
    m_pEntity = 0;
  else
    m_pEntity = g_pEntityList->m_EntPtrArray[this->m_hEnemy.m_Index & 0xFFF].m_pEntity;
  v10 = (float *)((int (__thiscall *)(IHandleEntity *, int))m_pEntity->__vftable[45].GetRefEHandle)(m_pEntity, a2);
  v11 = this->EyePosition(this, &vecNewTargetDist.z);
  vecCurrentTargetDist_8 = v11->x - *v10;
  vecNewTargetDist.x = v11->y - v10[1];
  v12 = (float *)(*(int (__thiscall **)(int))(*(_DWORD *)a4 + 548))(a4);
  v13 = this->EyePosition(this, v20);
  vecNewTargetDist.y = v13->x - *v12;
  vecNewTargetDist.z = v13->y - v12[1];
  v19[0] = v13->z - v12[2];
  _X = vecNewTargetDist.x * vecNewTargetDist.x
     + vecCurrentTargetDist_8 * vecCurrentTargetDist_8
     + vecCurrentTargetDist_4 * vecCurrentTargetDist_4;
  pNewTargeta = pfSqrt(_X);
  _Xa = v19[0] * v19[0] + vecNewTargetDist.z * vecNewTargetDist.z + vecNewTargetDist.y * vecNewTargetDist.y;
  return pNewTargeta - pfSqrt(_Xa) > tf_sentrygun_newtarget_dist.m_pParent->m_fValue;
}