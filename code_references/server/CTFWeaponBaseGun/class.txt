class CTFWeaponBaseGun : public CTFWeaponBase
{
    public class ServerClass * GetServerClass();
    public class SendTable * m_pClassSendTable;
    public int YouForgotToImplementOrDeclareServerClass();
    public struct datamap_t m_DataMap;
    public struct datamap_t * GetBaseMap();
    public struct datamap_t * GetDataDescMap();
	
    private void CTFWeaponBaseGun(class CTFWeaponBaseGun & );
    public void CTFWeaponBaseGun();
	
    public void PrimaryAttack();
    public void SecondaryAttack();
    public bool Holster(class CBaseCombatWeapon * );
	
    public void DoFireEffects();
	
    public void ToggleZoom();
	
    public class CBaseEntity * FireProjectile(class CTFPlayer * );
    public void GetProjectileFireSetup(class CTFPlayer * ,class Vector ,class Vector * ,class QAngle * ,bool );
	
    public void FireBullet(class CTFPlayer * );
    public class CBaseEntity * FireRocket(class CTFPlayer * );
    public class CBaseEntity * FireNail(class CTFPlayer * ,int );
    public class CBaseEntity * FirePipeBomb(class CTFPlayer * ,bool );
	
    public float GetWeaponSpread();
    public float GetProjectileSpeed();
	
    public void UpdatePunchAngles(class CTFPlayer * );
    public float GetProjectileDamage();
	
    public void ZoomIn();
    public void ZoomOut();
    public void ZoomOutIn();
	
    public void PlayWeaponShootSound();
	
    public void ~CTFWeaponBaseGun();
    public class CTFWeaponBaseGun & operator=(class CTFWeaponBaseGun & );
    public void __local_vftable_ctor_closure();
    public void * __vecDelDtor(unsigned int );
};