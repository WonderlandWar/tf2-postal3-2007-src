void __thiscall C_TFFlameThrower::ItemPostFrame(C_TFFlameThrower *this)
{
  C_BasePlayer *PlayerOwner; // edi
  int AmmoCount; // ebp
  bool (__thiscall *IsAlive)(C_BaseEntity *); // eax
  bool val[4]; // [esp+4h] [ebp-Ch] BYREF
  int iAmmo; // [esp+8h] [ebp-8h] BYREF
  int v7; // [esp+Ch] [ebp-4h]

  if ( !this->m_bLowered.m_Value )
  {
    PlayerOwner = C_TFWeaponBase::GetPlayerOwner(this);
    if ( PlayerOwner )
    {
      if ( PlayerOwner->IsPlayer(PlayerOwner) )
      {
        AmmoCount = C_BaseCombatCharacter::GetAmmoCount(PlayerOwner, this->m_iPrimaryAmmoType.m_Value);
        IsAlive = PlayerOwner->IsAlive;
        v7 = AmmoCount;
        if ( IsAlive(PlayerOwner) && (PlayerOwner->m_nButtons & 1) != 0 && AmmoCount > 0 )
        {
          this->PrimaryAttack(this);
        }
        else if ( this->m_iWeaponState.m_Value > 0 )
        {
          this->SendWeaponAnim(this, 1092);
          C_TFPlayer::DoAnimationEvent((C_TFPlayer *)PlayerOwner, PLAYERANIMEVENT_ATTACK_POST, 0);
          iAmmo = 0;
          CNetworkVarBase<int,C_TFFlameThrower::NetworkVar_m_iWeaponState>::Set(
            (CNetworkVarBase<int,C_BaseCombatWeapon::NetworkVar_m_iClip2> *)&this->m_iWeaponState,
            &iAmmo);
          val[3] = 0;
          CNetworkVarBase<bool,C_WeaponMedigun::NetworkVar_m_bChargeRelease>::operator=<bool>(
            &this->m_bCritFire,
            &val[3]);
        }
        if ( PlayerOwner->IsAlive(PlayerOwner) && (PlayerOwner->m_nButtons & 0x800) != 0 && v7 > 10 )
          this->SecondaryAttack(this);
        C_TFWeaponBase::ItemPostFrame(this);
      }
    }
  }
}