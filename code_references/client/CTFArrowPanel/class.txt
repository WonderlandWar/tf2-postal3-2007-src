class CTFArrowPanel : public CTFImagePanel
{
    public void AddToMap(char * ,void  ( * )(),int ,int ,char * ,int ,char * );
    public void ChainToMap();
    class CTFArrowPanel_RegisterMap
    {
        public void CTFArrowPanel_RegisterMap();
    };
    public class CTFArrowPanel::CTFArrowPanel_RegisterMap m_RegisterClass;
    public struct vgui::PanelMessageMap * GetMessageMap();
    public void AddToAnimationMap(char * ,char * ,char * ,char * ,bool ,void *  ( * )(class vgui::Panel * ));
    public void ChainToAnimationMap();
    class CTFArrowPanel_Register
    {
        public void CTFArrowPanel_Register();
    };
    public class CTFArrowPanel::CTFArrowPanel_Register m_RegisterAnimationClass;
    public struct PanelAnimationMap * GetAnimMap();
    public void KB_AddToMap(char * ,enum ButtonCode_t ,int ,void  ( * )(),char * ,char * ,bool );
    public void KB_ChainToMap();
    public void KB_AddBoundKey(char * ,int ,int );
    class CTFArrowPanel_RegisterKBMap
    {
        public void CTFArrowPanel_RegisterKBMap();
    };
    public class CTFArrowPanel::CTFArrowPanel_RegisterKBMap m_RegisterClassKB;
    public struct vgui::PanelKeyBindingMap * GetKBMap();
    public char * GetPanelClassName();
    public char * GetPanelBaseClassName();
	
    public void CTFArrowPanel(class CTFArrowPanel & );
    public void CTFArrowPanel(class vgui::Panel * ,char * );
    public void Paint();
    public bool IsVisible();
    public void SetEntity(class CHandle<C_BaseEntity> );
    public float GetAngleRotation();
	
	
    private class CHandle<C_BaseEntity> m_hEntity;
	
    private class CMaterialReference m_RedMaterial;
    private class CMaterialReference m_BlueMaterial;
    private class CMaterialReference m_NeutralMaterial;
	
};