class CControlPointIcon : public vgui::EditablePanel, public CHudElement
{
    public void AddToMap(char * ,void  ( * )(),int ,int ,char * ,int ,char * );
    public void ChainToMap();
    class CControlPointIcon_RegisterMap
    {
        public void CControlPointIcon_RegisterMap();
    };
    public class CControlPointIcon::CControlPointIcon_RegisterMap m_RegisterClass;
    public struct vgui::PanelMessageMap * GetMessageMap();
    public void AddToAnimationMap(char * ,char * ,char * ,char * ,bool ,void *  ( * )(class vgui::Panel * ));
    public void ChainToAnimationMap();
    class CControlPointIcon_Register
    {
        public void CControlPointIcon_Register();
    };
    public class CControlPointIcon::CControlPointIcon_Register m_RegisterAnimationClass;
    public struct PanelAnimationMap * GetAnimMap();
    public void KB_AddToMap(char * ,enum ButtonCode_t ,int ,void  ( * )(),char * ,char * ,bool );
    public void KB_ChainToMap();
    public void KB_AddBoundKey(char * ,int ,int );
    class CControlPointIcon_RegisterKBMap
    {
        public void CControlPointIcon_RegisterKBMap();
    };
    public class CControlPointIcon::CControlPointIcon_RegisterKBMap m_RegisterClassKB;
    public struct vgui::PanelKeyBindingMap * GetKBMap();
    public char * GetPanelClassName();
    public char * GetPanelBaseClassName();
    public void CControlPointIcon(class CControlPointIcon & );
    public void CControlPointIcon(class vgui::Panel * ,char * ,int );
    public void ~CControlPointIcon();
    public void ApplySchemeSettings(class vgui::IScheme * );
    public void PerformLayout();
    public void UpdateImage();
    public void UpdateCapImage();
    public bool IsPointLocked();
    public int GetCapIndex();
    public void SetSwipeUp(bool );
    public bool ShouldSwipeUp();
    public int GetCapProgressDir();
    public void SetCapProgressDir(int );
    public void FakePulse(float );
    public bool IsVisible();
    private int m_iCPIndex;
    private class vgui::ImagePanel * m_pOverlayImage;
    private class CControlPointIconPulseable * m_pBaseImage;
    private class CControlPointIconCapArrow * m_pCapImage;
    private class CControlPointIconSwoop * m_pCapHighlightImage;
    private class CControlPointIconCapturePulse * m_pCapPulseImage;
    private class vgui::ImagePanel * m_pCapPlayerImage;
    private class vgui::Label * m_pCapNumPlayers;
    private bool m_bSwipeUp;
    private float m_flStartCapAnimStart;
    private int m_iCapProgressDir;
    private int m_iPrevCappers;
    public class CControlPointIcon & operator=(class CControlPointIcon & );
    public void * __vecDelDtor(unsigned int );
};