class CHudMenuEngyBuild : public CHudElement, public vgui::EditablePanel
{
    public void AddToMap(char * ,void  ( * )(),int ,int ,char * ,int ,char * );
    public void ChainToMap();
    class CHudMenuEngyBuild_RegisterMap
    {
        public void CHudMenuEngyBuild_RegisterMap();
    };
    public class CHudMenuEngyBuild::CHudMenuEngyBuild_RegisterMap m_RegisterClass;
    public struct vgui::PanelMessageMap * GetMessageMap();
    public void AddToAnimationMap(char * ,char * ,char * ,char * ,bool ,void *  ( * )(class vgui::Panel * ));
    public void ChainToAnimationMap();
    class CHudMenuEngyBuild_Register
    {
        public void CHudMenuEngyBuild_Register();
    };
    public class CHudMenuEngyBuild::CHudMenuEngyBuild_Register m_RegisterAnimationClass;
    public struct PanelAnimationMap * GetAnimMap();
    public void KB_AddToMap(char * ,enum ButtonCode_t ,int ,void  ( * )(),char * ,char * ,bool );
    public void KB_ChainToMap();
    public void KB_AddBoundKey(char * ,int ,int );
    class CHudMenuEngyBuild_RegisterKBMap
    {
        public void CHudMenuEngyBuild_RegisterKBMap();
    };
    public class CHudMenuEngyBuild::CHudMenuEngyBuild_RegisterKBMap m_RegisterClassKB;
    public struct vgui::PanelKeyBindingMap * GetKBMap();
    public char * GetPanelClassName();
    public char * GetPanelBaseClassName();
	
    public void CHudMenuEngyBuild(class CHudMenuEngyBuild & );
    public void CHudMenuEngyBuild(char * );
	
    public void ApplySchemeSettings(class vgui::IScheme * );
    public bool ShouldDraw();
	
    public void SetVisible(bool );
	
    public void OnTick();
	
    public int HudElementKeyInput(int ,enum ButtonCode_t ,char * );
    public int MapIndexToObjectID(int );
	
    private class vgui::EditablePanel * m_pAvailableObjects[4];
    private class vgui::EditablePanel * m_pAlreadyBuiltObjects[4];
    private class vgui::EditablePanel * m_pCantAffordObjects[4];
	
    public void ~CHudMenuEngyBuild();
    public class CHudMenuEngyBuild & operator=(class CHudMenuEngyBuild & );
    public void * __vecDelDtor(unsigned int );
};