int __thiscall CHudMenuEngyBuild::HudElementKeyInput(
        CHudMenuEngyBuild *this,
        int down,
        ButtonCode_t keynum,
        const char *pszCurrentBinding)
{
  int result; // eax
  int iSlot; // esi
  C_TFPlayer *LocalTFPlayer; // eax
  C_BaseCombatCharacter *v7; // edi
  C_BaseObject *ObjectOfType; // ebx
  int m_Cost; // ebp
  char szCmd[128]; // [esp+14h] [ebp-88h] BYREF

  if ( !this->ShouldDraw(this) || !down )
    return 1;
  switch ( keynum )
  {
    case KEY_0:
    case KEY_XBUTTON_B:
      engine->ClientCmd(engine, "lastinv");
      goto $LN7_20;
    case KEY_1:
    case JOYSTICK_FIRST_POV_BUTTON:
      iSlot = 3;
      goto LABEL_9;
    case KEY_2:
    case KEY_XBUTTON_RIGHT:
      iSlot = 0;
      goto LABEL_9;
    case KEY_3:
    case KEY_XBUTTON_DOWN:
      iSlot = 1;
      goto LABEL_9;
    case KEY_4:
    case JOYSTICK_LAST_POV_BUTTON:
      iSlot = 2;
LABEL_9:
      LocalTFPlayer = C_TFPlayer::GetLocalTFPlayer();
      v7 = LocalTFPlayer;
      if ( LocalTFPlayer )
      {
        ObjectOfType = C_TFPlayer::GetObjectOfType(LocalTFPlayer, iSlot);
        m_Cost = GetObjectInfo(iSlot)->m_Cost;
        if ( ObjectOfType || C_BaseCombatCharacter::GetAmmoCount(v7, 3) < m_Cost )
        {
          C_BaseEntity::EmitSound(v7, "Player.DenyWeaponSelection", 0.0, 0);
          result = 0;
        }
        else
        {
          V_snprintf(&szCmd[4], 128, "build %d", iSlot);
          engine->ClientCmd(engine, &szCmd[4]);
          result = 0;
        }
      }
      else
      {
        result = 1;
      }
      break;
    case KEY_5:
    case KEY_6:
    case KEY_7:
    case KEY_8:
    case KEY_9:
$LN7_20:
      result = 0;
      break;
    default:
      result = 1;
      break;
  }
  return result;
}