void __thiscall C_WeaponMedigun::~C_WeaponMedigun(C_WeaponMedigun *this)
{
  bool v2; // zf
  CSoundEnvelopeController *Controller; // eax

  v2 = this->m_pChargedSound == 0;
  this->C_TFWeaponBaseGun::C_TFWeaponBase::C_BaseCombatWeapon::C_BaseAnimating::C_BaseEntity::IClientEntity::IClientUnknown::IHandleEntity::__vftable = (C_WeaponMedigun_vtbl *)&C_WeaponMedigun::`vftable'{for `IClientUnknown'};
  this->C_TFWeaponBaseGun::C_TFWeaponBase::C_BaseCombatWeapon::C_BaseAnimating::C_BaseEntity::IClientEntity::IClientRenderable::__vftable = (IClientRenderable_vtbl *)&C_WeaponMedigun::`vftable'{for `IClientRenderable'};
  this->C_TFWeaponBaseGun::C_TFWeaponBase::C_BaseCombatWeapon::C_BaseAnimating::C_BaseEntity::IClientEntity::IClientNetworkable::__vftable = (IClientNetworkable_vtbl *)&C_WeaponMedigun::`vftable'{for `IClientNetworkable'};
  this->C_TFWeaponBaseGun::C_TFWeaponBase::C_BaseCombatWeapon::C_BaseAnimating::C_BaseEntity::IClientEntity::IClientThinkable::__vftable = (IClientThinkable_vtbl *)&C_WeaponMedigun::`vftable'{for `IClientThinkable'};
  if ( !v2 )
  {
    Controller = CSoundEnvelopeController::GetController();
    Controller->SoundDestroy(Controller, this->m_pChargedSound);
  }
  CUtlVector<CClientThinkList::ThinkListChanges_t,CUtlMemory<CClientThinkList::ThinkListChanges_t,int>>::~CUtlVector<CClientThinkList::ThinkListChanges_t,CUtlMemory<CClientThinkList::ThinkListChanges_t,int>>((CUtlVector<vgui::CTreeViewListControl::CColumnInfo,CUtlMemory<vgui::CTreeViewListControl::CColumnInfo,int> > *)&this->m_hHealingTargetEffects);
  C_BaseCombatWeapon::~C_BaseCombatWeapon(this);
}