class CTFMedicCallerPanel : public vgui::EditablePanel
{
    public void AddToMap(char * ,void  ( * )(),int ,int ,char * ,int ,char * );
    public void ChainToMap();
    class CTFMedicCallerPanel_RegisterMap
    {
        public void CTFMedicCallerPanel_RegisterMap();
    };
    public class CTFMedicCallerPanel::CTFMedicCallerPanel_RegisterMap m_RegisterClass;
    public struct vgui::PanelMessageMap * GetMessageMap();
    public void AddToAnimationMap(char * ,char * ,char * ,char * ,bool ,void *  ( * )(class vgui::Panel * ));
    public void ChainToAnimationMap();
    class CTFMedicCallerPanel_Register
    {
        public void CTFMedicCallerPanel_Register();
    };
    public class CTFMedicCallerPanel::CTFMedicCallerPanel_Register m_RegisterAnimationClass;
    public struct PanelAnimationMap * GetAnimMap();
    public void KB_AddToMap(char * ,enum ButtonCode_t ,int ,void  ( * )(),char * ,char * ,bool );
    public void KB_ChainToMap();
    public void KB_AddBoundKey(char * ,int ,int );
    class CTFMedicCallerPanel_RegisterKBMap
    {
        public void CTFMedicCallerPanel_RegisterKBMap();
    };
    public class CTFMedicCallerPanel::CTFMedicCallerPanel_RegisterKBMap m_RegisterClassKB;
    public struct vgui::PanelKeyBindingMap * GetKBMap();
    public char * GetPanelClassName();
    public char * GetPanelBaseClassName();
	
    public void CTFMedicCallerPanel(class CTFMedicCallerPanel & );
    public void CTFMedicCallerPanel(class vgui::Panel * ,char * );
    public void ~CTFMedicCallerPanel();
	
    public void ApplySchemeSettings(class vgui::IScheme * );
    public void OnTick();
    public void Paint();
	
    public void GetCallerPosition(class Vector & ,float ,float * ,float * ,float * );
    public void SetPlayer(class C_TFPlayer * ,float ,class Vector & );
    public void AddMedicCaller(class C_TFPlayer * ,float ,class Vector & );
	
    private class IMaterial * m_pArrowMaterial;
    private float m_flRemoveAt;
    private class Vector m_vecOffset;
    private class CHandle<C_TFPlayer> m_hPlayer;
    private bool m_bDrawLeftArrow;
};