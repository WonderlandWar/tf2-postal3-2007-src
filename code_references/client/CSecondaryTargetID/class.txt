class CSecondaryTargetID : public CTargetID
{
    public void AddToMap(char * ,void  ( * )(),int ,int ,char * ,int ,char * );
    public void ChainToMap();
    class CSecondaryTargetID_RegisterMap
    {
        public void CSecondaryTargetID_RegisterMap();
    };
    public class CSecondaryTargetID::CSecondaryTargetID_RegisterMap m_RegisterClass;
    public struct vgui::PanelMessageMap * GetMessageMap();
    public void AddToAnimationMap(char * ,char * ,char * ,char * ,bool ,void *  ( * )(class vgui::Panel * ));
    public void ChainToAnimationMap();
    class CSecondaryTargetID_Register
    {
        public void CSecondaryTargetID_Register();
    };
    public class CSecondaryTargetID::CSecondaryTargetID_Register m_RegisterAnimationClass;
    public struct PanelAnimationMap * GetAnimMap();
    public void KB_AddToMap(char * ,enum ButtonCode_t ,int ,void  ( * )(),char * ,char * ,bool );
    public void KB_ChainToMap();
    public void KB_AddBoundKey(char * ,int ,int );
    class CSecondaryTargetID_RegisterKBMap
    {
        public void CSecondaryTargetID_RegisterKBMap();
    };
    public class CSecondaryTargetID::CSecondaryTargetID_RegisterKBMap m_RegisterClassKB;
    public struct vgui::PanelKeyBindingMap * GetKBMap();
    public char * GetPanelClassName();
    public char * GetPanelBaseClassName();
    public void CSecondaryTargetID(class CSecondaryTargetID & );
    public void CSecondaryTargetID(char * );
    public bool ShouldDraw();
    public int CalculateTargetIndex(class C_TFPlayer * );
    public wchar_t * GetPrepend();
    private wchar_t * m_pwszPrepend;
    public void ~CSecondaryTargetID();
    public class CSecondaryTargetID & operator=(class CSecondaryTargetID & );
    public void * __vecDelDtor(unsigned int );
};