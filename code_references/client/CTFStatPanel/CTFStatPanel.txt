void __thiscall CTFStatPanel::CTFStatPanel(CTFStatPanel *this, const char *pElementName)
{
  vgui::PanelMessageMap *v3; // edi
  PanelAnimationMap *v4; // edi
  vgui::PanelKeyBindingMap *v5; // edi
  vgui::Panel *v6; // eax
  CTFClassImage *v7; // eax
  CTFClassImage *v8; // eax

  vgui::EditablePanel::EditablePanel(this, 0, "StatPanel");
  CHudElement::CHudElement(&this->CHudElement, pElementName);
  this->vgui::EditablePanel::vgui::Panel::vgui::IClientPanel::__vftable = (CTFStatPanel_vtbl *)&CTFStatPanel::`vftable'{for `vgui::EditablePanel'};
  this->CHudElement::CGameEventListener::IGameEventListener2::__vftable = (CHudElement_vtbl *)&CTFStatPanel::`vftable'{for `CHudElement'};
  if ( !`CTFStatPanel::ChainToMap'::`2'::chained )
  {
    `CTFStatPanel::ChainToMap'::`2'::chained = 1;
    v3 = vgui::FindOrAddPanelMessageMap("CTFStatPanel");
    v3->pfnClassName = CTFStatPanel::GetPanelClassName;
    v3->baseMap = vgui::FindOrAddPanelMessageMap("EditablePanel");
  }
  if ( !`CTFStatPanel::ChainToAnimationMap'::`2'::chained )
  {
    `CTFStatPanel::ChainToAnimationMap'::`2'::chained = 1;
    v4 = FindOrAddPanelAnimationMap("CTFStatPanel");
    v4->pfnClassName = CTFStatPanel::GetPanelClassName;
    v4->baseMap = FindOrAddPanelAnimationMap("EditablePanel");
  }
  if ( !`CTFStatPanel::KB_ChainToMap'::`2'::chained )
  {
    `CTFStatPanel::KB_ChainToMap'::`2'::chained = 1;
    v5 = vgui::FindOrAddPanelKeyBindingMap("CTFStatPanel");
    v5->pfnClassName = CTFStatPanel::GetPanelClassName;
    v5->baseMap = vgui::FindOrAddPanelKeyBindingMap("EditablePanel");
  }
  this->m_aClassStats.m_Memory.m_pMemory = 0;
  this->m_aClassStats.m_Memory.m_nAllocationCount = 0;
  this->m_aClassStats.m_Memory.m_nGrowSize = 0;
  this->m_aClassStats.m_Size = 0;
  this->m_aClassStats.m_pElements = 0;
  this->m_flTimeHide = 0.0;
  this->m_iCurStatValue = 0;
  this->m_iCurStatTeam = 0;
  this->m_statType = TFSTAT_UNDEFINED;
  this->m_recordBreakType = RECORDBREAK_NONE;
  this->m_iCurStatClassIndex = -1;
  this->m_bDisplayAfterSpawn = 0;
  this->m_bStatsChanged = 0;
  v6 = g_pClientMode->GetViewport(g_pClientMode);
  vgui::Panel::SetParent(this, v6);
  vgui::Panel::SetVisible(this, 0);
  vgui::Panel::SetScheme(this, "ClientScheme");
  statPanel = this;
  v7 = (CTFClassImage *)operator new(0xD4u);
  if ( v7 )
    CTFClassImage::CTFClassImage(v7, this, "StatPanelClassImage");
  else
    v8 = 0;
  this->m_pClassImage = v8;
  CTFStatPanel::ReadStats(this);
}